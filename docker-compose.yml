version: '2'

volumes:
  docker_elk_data:
    driver: local
  app_dnx_packages:
    driver: local
  
services:

  app:
    build: app
    ports:
      - "5000:5000"
    volumes:
      - app_dnx_packages:/root/.dnx/packages
    depends_on:
      - db

  db:
    image: postgres
    environment:
      POSTGRES_USER: aspnet
      POSTGRES_PASSWORD: aspnet

  mon:
    image: prom/prometheus
    volumes:
      - ./mon/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  elk:
    environment:
      LOGSPOUT: ignore
    image: willdurand/elk:kibana-4.4.2
    ports:
      - "8080:80"
      - "5050:5050"
      - "5050:5050/udp"
    volumes:
      - ./elk/config:/etc/logstash
      - docker_elk_data:/data

  logspout:
    image: gliderlabs/logspout
    environment:
      LOGSPOUT: ignore
      DEBUG: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - elk
    command: syslog://elk:5050
    depends_on:
      - elk

  #
  # gocd-server:
  #   image: gocd/gocd-server
  #   ports:
  #     - '8153:8153'
  #   volumes:
  #     - ./gocd/var/lib/go-server/addons:/var/lib/go-server/addons
  #     - ./gocd/var/log/go-server:/var/log/go-server
  #     - ./gocd/etc/go:/etc/go
  #     - ./gocd/go-addons:/go-addons
  #     - ./gocd/var/go:/var/go
  #
  # gocd-agent:
  #   image: gocd/gocd-agent
  #   environment:
  #     - GO_SERVER=gocd-server
  #   links:
    #   - gocd-server
    # depends_on:
    #   - gocd-server
